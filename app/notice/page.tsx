'use client';
import Image from 'next/image';
import defaultImg from '@/public/image/notice/defaultProfile.svg';
import FullHeart from '@/public/image/notice/FullHeart.svg';
import EmptyHeart from '@/public/image/notice/EmptyHeart.svg';
import chat from '@/public/image/notice/chat.svg';
import send from '@/public/image/notice/send.svg';
import arrow from '@/public/image/notice/Left.svg';
import React, { useState } from 'react';

const Page = () => {
  const text = `‚ùóÔ∏èÍπîÎ£®ÏïÑ 9Ïõî Ï†ïÍ∏∞Í≥µÏó∞‚ùóÔ∏è
ÏïàÎÖïÌïòÏÑ∏Ïöî ÍπîÎ£®ÏïÑ 21Í∏∞ Í∏∞Ïû• ÏµúÏäπÏõêÏûÖÎãàÎã§ü§©
9Ïõî 1Ïùº Í∏àÏöîÏùº, ÍπîÎ£®ÏïÑÏùò 9Ïõî Ï†ïÍ∏∞Í≥µÏó∞Ïù¥ ÏûàÏäµÎãàÎã§‚ÄºÔ∏è
Ïû¨ÌïôÏÉùÏù¥Ïã† ÏÑ†Î∞∞ÎãòÎì§ÍªòÏÑúÎäî ÏàòÏóÖÏù¥ ÎÅùÎÇú ÌõÑÏóê, Ï°∏ÏóÖÏÉùÏù¥Ïã† ÏÑ†Î∞∞ÎãòÎì§ÍªòÏÑúÎäî ÏãúÍ∞ÑÏù¥ ÎêòÏã†Îã§Î©¥ Í≥µÏó∞ Î≥¥Îü¨Ïò§ÏÖîÏÑú Ìï®Íªò Ï¶êÍ≤®Ï£ºÏãúÎ©¥ Ï¢ãÏùÑ Í≤É Í∞ôÏäµÎãàÎã§ !!

> 9Ïõî Ï†ïÍ∏∞Í≥µÏó∞ ÏùºÏ†ï <
ÎÇ†Ïßú : 9Ïõî 1Ïùº Í∏àÏöîÏùº
ÏãúÍ∞Ñ : Ïò§ÌõÑ 6Ïãú ~ 9Ïãú
Ïû•ÏÜå : ÌîåÎ†âÏä§ÎùºÏö¥ÏßÄ
Ìã∞ÏºìÍ∞ÄÍ≤© : 5000Ïõê

Îí∑ÌíÄÏù¥ : Ïò§ÌõÑ 9Ïãú ~
Ïû•ÏÜå: Ïò§Îß•

Í≥µÏó∞ Ïù¥ÌõÑÏóê Îí∑ÌíÄÏù¥Î•º ÏßÑÌñâÌï† ÏòàÏ†ïÏûÖÎãàÎã§. Îí∑ÌíÄÏù¥ Ïû•ÏÜå ÏòàÏïΩÏùÑ ÏúÑÌï¥ÏÑú ÎåÄÎûµÏ†ÅÏù∏ Ïù∏ÏõêÏùÑ ÌôïÏù∏ÌïòÍ≥† ÏûàÏäµÎãàÎã§!
ÌòπÏãú Í≥µÏó∞Ïóê Ï∞∏ÏÑùÌïòÏãúÎäî ÏÑ†Î∞∞ÎãòÎì§Ïù¥ÎÇò, Îí∑ÌíÄÏù¥Ïóê Ï∞∏ÏÑùÌïòÏãúÎäî ÏÑ†Î∞∞ÎãòÎì§ÍªòÏÑúÎäî 010-4827-2589Î°ú Ïó∞ÎùΩÏ£ºÏãúÎ©¥ Í∞êÏÇ¨ÌïòÍ≤†ÏäµÎãàÎã§ü§©

Í∏∞ÌÉÄ Î™®Îì† Î¨∏ÏùòÏÇ¨Ìï≠ÏùÄ ÌéòÏù¥Ïä§Î∂Å Î©îÏÑ∏ÏßÄÎÇò ÎåìÍ∏Ä, ÎòêÎäî ÏúÑÏùò Ï†ÑÌôîÎ≤àÌò∏Î°ú Ïó∞ÎùΩÏ£ºÏÑ∏Ïöî ! Í∞êÏÇ¨Ìï©ÎãàÎã§ü§©ü§©`;

  const [isFilled, setIsFilled] = useState(false);
  const [heartCount, setHeartCount] = useState(0);
  const [chatCount, setChatCount] = useState(0);

  // ÎåìÍ∏Ä ÏÉÅÌÉú Í¥ÄÎ¶¨
  const [comments, setComments] = useState<
    { id: number; name: string; date: string; text: string }[]
  >([]);
  const [commentText, setCommentText] = useState('');

  const handleToggle = () => {
    setIsFilled((prev) => !prev);
    setHeartCount((prev) => (isFilled ? prev - 1 : prev + 1)); // ÌïòÌä∏ Ïàò Ï°∞Ï†ï
  };

  const formatDate = (date: Date) => {
    const year = date.getFullYear();
    const month = String(date.getMonth() + 1).padStart(2, '0');
    const day = String(date.getDate()).padStart(2, '0');
    return `${year}. ${month}. ${day}`;
  };

  const addComment = () => {
    if (commentText.trim() === '') return;
    const newComment = {
      id: comments.length + 1,
      name: 'ÏûÑÍ∞ÄÌòÑ',
      date: formatDate(new Date()),
      text: commentText,
    };
    setComments([...comments, newComment]);
    setCommentText('');
  };
  return (
    <div className="w-full h-full">
      <div className="font-pretendard w-full pt-[64px] flex flex-col justify-center items-center ">
        <div className="flex flex-col w-[1200px] gap-16">
          <div className="flex mt-8">
            <Image
              src={defaultImg}
              alt="default-profile"
              width={88}
              height={88}
            />
            <div className="flex flex-col ml-[24px]">
              <span className="font-pretendard text-[32px] font-semibold">
                2024ÎÖÑ 9Ïõî Ï†ïÍ∏∞Í≥µÏó∞
              </span>
              <span className="flex flex-row mt-[16px] items-center gap-2">
                <span className="font-pretendard text-base font-medium flex">
                  Í¥ÄÎ¶¨Ïûê
                </span>
                <div className="h-[24px] border-l border-black" />
                <span className="font-pretendard text-base font-medium flex">
                  2024. 08. 01
                </span>
              </span>
            </div>
          </div>
          <div className="w-full border-b border-gray-15" />
          <div className="font-pretendard text-xl font-medium whitespace-pre-line ">
            {text}
          </div>
          <div className="w-full border-b border-gray-15 mb-10" />
        </div>
        <div>
          <div className="flex flex-col w-[1200px] items-start mb-10">
            <div className="flex items-center">
              <div
                onClick={handleToggle}
                style={{ cursor: 'pointer' }}
                className="flex items-center"
              >
                <Image
                  src={isFilled ? FullHeart : EmptyHeart}
                  alt="heart"
                  width={20}
                  height={20}
                />
                <span className="ml-[10px] font-pretendard text-base">
                  {heartCount}
                </span>
              </div>
              <div className="flex items-center ml-[24px]">
                <Image src={chat} alt="chat" width={24} height={24} />
                <span className="ml-[10px] font-pretendard text-base">
                  {chatCount}
                </span>
              </div>
            </div>
          </div>

          {/* ÎåìÍ∏Ä Î™©Î°ù */}
          {comments.length > 0 && (
            <div className="w-[1200px] flex flex-col gap-10 mt-10 mb-10">
              {comments.map((comment) => (
                <div key={comment.id} className="flex items-start gap-3">
                  <Image
                    src={defaultImg}
                    alt="default-profile"
                    width={54}
                    height={54}
                    className="rounded-full"
                  />
                  <div className="flex flex-col gap-2">
                    <div className="flex flex-row gap-1">
                      <span className="font-pretendard text-base font-normal">
                        {comment.name}
                      </span>
                      <span className="flex items-center font-pretendard text-[10px] text-gray-40 font-normal">
                        {comment.date}
                      </span>
                    </div>
                    <p className="font-pretendard text-base">{comment.text}</p>
                    <button className="flex items-start font-pretendard text-sm text-gray-40 hover:underline">
                      ÎãµÍ∏ÄÎã¨Í∏∞
                    </button>
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>

        {/* ÎåìÍ∏Ä ÏûÖÎ†•Ï∞Ω */}
        <div className="w-[1200px]  flex items-start gap-3 mb-10">
          <input
            type="text"
            value={commentText}
            onChange={(e) => setCommentText(e.target.value)}
            onKeyDown={(e) => {
              if (e.nativeEvent.isComposing) return;
              if (e.key === 'Enter') {
                addComment();
              }
            }}
            placeholder=" ÎåìÍ∏ÄÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî"
            className="min-h-[60px] border font-pretendard text-base font-semibold border-black rounded-lg px-3 py-2 w-full placeholder:text-gray-40 focus:outline-none"
          />
          <div className="relative">
            <div
              className="flex items-center justify-center border rounded-lg border-black w-[60px] h-[60px] cursor-pointer"
              onClick={addComment}
            >
              <Image src={send} alt="send" width={20} height={20} />
            </div>
          </div>
        </div>
        <div className="w-[1200px]">
          <div className="flex items-start w-full">
            <div className="flex w-[90px]  cursor-pointer  gap-[10px]">
              <Image src={arrow} alt="arrow" width={24} height={24} />
              <span className="font-pretendard text-base font-medium">
                Î™©Î°ùÏúºÎ°ú
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Page;
